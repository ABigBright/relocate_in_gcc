
b.o:     file format elf32-littlearm
b.o
architecture: armv4t, flags 0x00000011:
HAS_RELOC, HAS_SYMS
start address 0x00000000
private flags = 5000000: [Version5 EABI]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn  Flags
  0 .text         00000018  00000000  00000000  00000034  2**2  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  1 .data         00000000  00000000  00000000  0000004c  2**0  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  0000004c  2**0  ALLOC
  3 .comment      00000080  00000000  00000000  0000004c  2**0  CONTENTS, READONLY
  4 .ARM.attributes 00000030  00000000  00000000  000000cc  2**0  CONTENTS, READONLY
SYMBOL TABLE:
00000000 l    df *ABS*	00000000 b.c
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 g     F .text	00000018 func_b



Disassembly of section .text:

00000000 <func_b>:
func_b():
   0:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   4:	e28db000 	add	fp, sp, #0
   8:	e1a00000 	nop			; (mov r0, r0)
   c:	e28bd000 	add	sp, fp, #0
  10:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
  14:	e12fff1e 	bx	lr	14: R_ARM_V4BX	*ABS*
